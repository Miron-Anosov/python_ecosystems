version: '3.2'

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - 'prometheus_storage:/var/lib/prometheus'
      - './prometheus:/etc/prometheus'
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  alertmanager:
    image: quay.io/prometheus/alertmanager
    container_name: prometheus_alertmanager
    restart: unless-stopped
    ports:
      - '9093:9093'
    volumes:
      - './prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml'
      - 'alertmanager:/var/lib/alertmanager'
      - './prometheus/tg_alert.tmpl:/etc/alertmanager/tg_alert.tmpl'
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
#    environment:
#      - SMTP_AUTH_PASSWORD=${SMTP_AUTH_PASSWORD}  можно ли как-то передвать в раб окружение переменную и от туда извлекать?
#      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    ports:
      - '9100:9100'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
#  - './dashboards:/var/lib/grafana/dashboards/' возможно как то передать dashboards без использования


  flask_api:
    build:
      context: ./app/
      dockerfile: Dockerfile
    image: app
    container_name: flask_api
    restart: unless-stopped
    ports:
      - '5000:5000'

  requestmaker:
    build:
      context: ./request_test_client/
      dockerfile: Dockerfile
    image: requestmaker
    container_name: requestmaker
    restart: unless-stopped
    depends_on:
      - flask_api
    ports:
      - '8000:8000'
    stop_signal: SIGINT
    stop_grace_period: 5s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  grafana_storage: { }
  prometheus_storage: { }
  alertmanager: { }
  node_exporter_storage: { }
